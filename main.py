"""Alyce - Telegram 瀹㈡埛绔鏋?涓诲叆鍙ｆ枃浠?"""import asyncioimport sysfrom pathlib import Pathfrom core.client.telegram import TelegramClientfrom utils.config import configfrom utils.logging import setup_logger# 閰嶇疆鏃ュ織logger = setup_logger(level='DEBUG' if config.get_bool('DEBUG') else 'INFO')async def main():    """涓诲嚱鏁?""    # 楠岃瘉閰嶇疆    if not config.validate():        logger.error("Missing required configuration. Please check your .env file.")        print("\nPlease create a .env file with the following content:")        print("""# Telegram API credentialsAPI_ID=your_api_idAPI_HASH=your_api_hashPHONE=your_phone_number  # with country code, e.g., +1234567890# Optional# SESSION_PATH=session  # default: 'session'# DEBUG=True           # enable debug logging""")        return 1        # 鍒涘缓骞跺惎鍔ㄥ鎴风    client = TelegramClient()        try:        # 杩炴帴        if not await client.connect():            return 1                    # 淇濇寔杩愯鐩村埌鐢ㄦ埛涓柇        print("\nConnected to Telegram! Press Ctrl+C to exit.")        print(f"Logged in as: {client.me.first_name} (@{client.me.username or 'N/A'})")                while await client.is_connected():            await asyncio.sleep(1)                except KeyboardInterrupt:        print("\nDisconnecting...")    except Exception as e:        logger.error(f"An error occurred: {e}", exc_info=True)        return 1    finally:        # 纭繚瀹㈡埛绔纭叧闂?        await client.disconnect()        return 0if __name__ == "__main__":    sys.exit(asyncio.run(main()))