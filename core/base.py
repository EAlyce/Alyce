"""瀹㈡埛绔熀绫?瀹氫箟 Alyce 瀹㈡埛绔殑閫氱敤鎺ュ彛"""from abc import ABC, abstractmethodfrom typing import Any, Dict, Optionalclass BaseClient(ABC):    """Alyce 瀹㈡埛绔熀绫?""        def __init__(self, **kwargs):        """        鍒濆鍖?Alyce 瀹㈡埛绔?                Args:            **kwargs: 瀹㈡埛绔厤缃弬鏁?        """        self.config = kwargs        self.client = None        @abstractmethod    async def connect(self) -> bool:        """杩炴帴鍒版湇鍔″櫒"""        pass        @abstractmethod    async def disconnect(self):        """鏂紑涓庢湇鍔″櫒鐨勮繛鎺?""        pass        @abstractmethod    async def is_connected(self) -> bool:        """妫€鏌ユ槸鍚﹀凡杩炴帴"""        pass        @property    @abstractmethod    def me(self) -> Optional[Dict[str, Any]]:        """鑾峰彇褰撳墠鐢ㄦ埛淇℃伅"""        pass